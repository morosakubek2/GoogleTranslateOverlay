name: Manual Build and Release GoogleTranslateOverlay APK

on:
  workflow_dispatch:  # Ręczne uruchamianie

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Dla uploadu assetów do release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Dla tagów i historii

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: '34.0.0'

      - name: Add build-tools to PATH
        run: |
          echo "$ANDROID_HOME/build-tools/34.0.0" >> $GITHUB_PATH

      - name: Generate Gradle Wrapper
        run: |
          gradle wrapper --gradle-version 9.1.0
          chmod +x ./gradlew

      - name: Generate keystore
        run: |
          keytool -genkey -v -keystore translateoverlay.jks \
            -alias translateoverlay \
            -keyalg RSA -keysize 2048 -validity 10000 \
            -dname "CN=TranslateOverlay, OU=Unknown, O=Unknown, L=Unknown, S=Unknown, C=PL" \
            -storepass morosakubek@o2.pl \
            -keypass morosakubek@o2.pl
          echo "KEYSTORE_PATH=$(pwd)/translateoverflow.jks" >> $GITHUB_ENV
        env:
          KEYSTORE_PASSWORD: morosakubek@o2.pl
          KEY_PASSWORD: morosakubek@o2.pl

      - name: Debug: Verify keystore and tools
        run: |
          ls -la translateoverflow.jks
          keytool -list -v -keystore translateoverflow.jks -storepass morosakubek@o2.pl | head -10
          which zipalign
          which apksigner

      - name: Build with Gradle
        run: |
          ./gradlew assembleRelease --stacktrace --info
        env:
          GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx6g -XX:MaxMetaspaceSize=1g"
          KEYSTORE_PATH: ${{ env.KEYSTORE_PATH }}
          KEYSTORE_PASSWORD: morosakubek@o2.pl
          KEY_PASSWORD: morosakubek@o2.pl

      - name: Debug: Check build output
        if: success()
        run: |
          ls -la app/build/outputs/apk/release/
          if [ -f app/build/outputs/apk/release/app-release-unsigned.apk ]; then
            echo "Unsigned APK generated successfully"
          else
            echo "ERROR: Unsigned APK not found!"
            exit 1
          fi

      - name: Get version
        if: success()
        run: |
          VERSION_NAME=$(grep "versionName" app/build.gradle | awk '{print $2}' | tr -d '"')
          echo "VERSION_NAME=$VERSION_NAME" >> $GITHUB_ENV

      - name: Align APK
        if: success()
        run: |
          zipalign -v -p 4 \
            app/build/outputs/apk/release/app-release-unsigned.apk \
            app/build/outputs/apk/release/app-release-aligned.apk

      - name: Sign APK
        if: success()
        run: |
          apksigner sign \
            --ks translateoverflow.jks \
            --ks-key-alias translateoverflow \
            --ks-pass pass:morosakubek@o2.pl \
            --key-pass pass:morosakubek@o2.pl \
            --out app/build/outputs/apk/release/GoogleTranslateOverlay-v${{ env.VERSION_NAME }}-signed.apk \
            app/build/outputs/apk/release/app-release-aligned.apk
          apksigner verify \
            app/build/outputs/apk/release/GoogleTranslateOverlay-v${{ env.VERSION_NAME }}-signed.apk

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: GoogleTranslateOverlay-v${{ env.VERSION_NAME }}-apk
          path: app/build/outputs/apk/release/GoogleTranslateOverlay-v${{ env.VERSION_NAME }}-signed.apk
          retention-days: 30

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: build-failure-logs
          path: |
            **/*.log
            build/
          retention-days: 7
