name: Build & Release APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 8.9
          cache-disabled: true

      - name: Generate gradlew (if missing)
        run: |
          if [ ! -f "./gradlew" ]; then
            gradle wrapper --gradle-version 8.9 --distribution-type bin
          fi
          chmod +x ./gradlew

      - name: Build Release APK
        run: ./gradlew assembleRelease --stacktrace --info

      - name: Wait & List ALL APKs (with full path)
        run: |
          echo "=== WAITING 15s FOR FILE SYSTEM ==="
          sleep 100
          echo "=== ALL .apk FILES IN PROJECT (FULL PATH + SIZE) ==="
          find . -name "*.apk" -type f -exec echo "FOUND: {}" \; -exec du -h {} \;

      - name: Get Version Name
        id: version
        run: |
          VERSION=$(grep "versionName" app/build.gradle | awk -F'"' '{print $2}')
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Find & Copy LARGEST APK (with log)
        run: |
          # Znajdź największy APK
          LARGEST=$(find . -name "*.apk" -type f -exec du -b {} + | sort -nr | head -1)
          
          if [ -z "$LARGEST" ]; then
            echo "ERROR: No APK found anywhere!"
            exit 1
          fi
          
          APK_PATH=$(echo "$LARGEST" | cut -f2)
          APK_SIZE=$(echo "$LARGEST" | cut -f1 | numfmt --to=iec-i --suffix=B)
          
          echo "LARGEST APK FOUND:"
          echo "   PATH: $APK_PATH"
          echo "   SIZE: $APK_SIZE"
          
          TARGET="GoogleTranslateOverlay-v${{ steps.version.outputs.version }}.apk"
          cp "$APK_PATH" "$TARGET"
          
          echo "COPIED TO: $TARGET"
          echo "FINAL SIZE: $(du -h $TARGET | cut -f1)"
          echo "FILE TYPE: $(file $TARGET)"
          
          echo "=== APK STRUCTURE (first 20 entries) ==="
          unzip -l "$TARGET" | head -20

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: APK
          path: GoogleTranslateOverlay-v*.apk

      - name: Create Release
        run: |
          gh release delete "v${{ steps.version.outputs.version }}" --yes || true
          gh release create "v${{ steps.version.outputs.version }}" \
            --title "GoogleTranslateOverlay v${{ steps.version.outputs.version }}" \
            --notes "APK found at: $(find . -name "*.apk" -type f -exec du -b {} + | sort -nr | head -1 | cut -f2)" \
            GoogleTranslateOverlay-v${{ steps.version.outputs.version }}.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
